def ideal_gas_law():
    # Available units
    units = {
        'pressure': ['Pa', 'kPa', 'atm', 'bar', 'torr', 'mmHg', 'mbar', 'psi'],
        'volume': ['m^3', 'L', 'mL', 'cm^3', 'ft^3'],
        'moles': ['mol', 'lb-mol'],
        'temperature': ['K', 'C', 'R'],
        'R': [
            'J/(kg*K)', 'J/(K*mol)', 'L*atm/(K*mol)', 'm^3*atm/(K*mol)', 
            'cm^3*MPa/(K*mol)', 'L*kPa/(K*mol)', 'm^3*Pa/(K*mol)', 
            'L*mmHg/(K*mol)', 'L*Torr/(K*mol)', 'L*mbar/(K*mol)', 
            'cal/(K*mol)', 'lbf*ft/(K*g*mol)', 'ft^3*psi/(R*lb-mol)', 
            'eV/(K*atom)', 'ft^3*atm/(R*lb-mol)', 'Btu/(lb-mol*R)'
        ]
    }

    # Universal gas constant in different units
    R_values = {
        'J/(kg*K)': 87.0530,
        'J/(K*mol)': 8.3144621,
        'L*atm/(K*mol)': 0.0820574587,
        'm^3*atm/(K*mol)': 8.20574587e-5,
        'cm^3*MPa/(K*mol)': 8.314462,
        'L*kPa/(K*mol)': 8.314462,
        'm^3*Pa/(K*mol)': 8.314462,
        'L*mmHg/(K*mol)': 62.3637,
        'L*Torr/(K*mol)': 62.3637,
        'L*mbar/(K*mol)': 83.14462,
        'cal/(K*mol)': 1.987,
        'lbf*ft/(K*g*mol)': 6.132439833,
        'ft^3*psi/(R*lb-mol)': 10.73,
        'eV/(K*atom)': 8.63e-5,
        'ft^3*atm/(R*lb-mol)': 0.7302,
        'Btu/(lb-mol*R)': 1.987
    }

    def convert_temperature(T, from_unit, to_unit):
        if from_unit == 'C':
            T += 273.15
        elif from_unit == 'R':
            T = T * (5/9)
        
        if to_unit == 'C':
            T -= 273.15
        elif to_unit == 'R':
            T = T * (9/5)
        return T

    def convert_volume(V, from_unit, to_unit):
        conversion_factors = {
            'm^3': 1,
            'L': 1e-3,
            'mL': 1e-6,
            'cm^3': 1e-6,
            'ft^3': 0.0283168
        }
        return V * conversion_factors[from_unit] / conversion_factors[to_unit]

    def convert_pressure(p, from_unit, to_unit):
        conversion_factors = {
            'Pa': 1,
            'kPa': 1e3,
            'atm': 101325,
            'bar': 1e5,
            'torr': 133.322,
            'mmHg': 133.322,
            'mbar': 100,
            'psi': 6894.76
        }
        return p * conversion_factors[from_unit] / conversion_factors[to_unit]

    # Request the variable of interest
    variables = ['pressure', 'volume', 'moles', 'temperature']
    print("Select the variable of interest to calculate:")
    for i, var in enumerate(variables):
        print(f"{i + 1}. {var}")

    choice = int(input("Enter the number corresponding to the variable: ")) - 1
    var_to_calculate = variables[choice]

    # Request units for known variables
    known_variables = [var for var in variables if var != var_to_calculate]
    known_values = {}

    for var in known_variables:
        print(f"\nAvailable units for {var}:")
        for i, unit in enumerate(units[var]):
            print(f"{i + 1}. {unit}")
        unit_choice = int(input(f"Choose the unit for {var}: ")) - 1
        unit = units[var][unit_choice]
        value = float(input(f"Enter the value of {var} ({unit}): "))
        known_values[var] = (value, unit)

    # Request unit for the gas constant R
    print(f"\nAvailable units for R:")
    for i, unit in enumerate(units['R']):
        print(f"{i + 1}. {unit}")
    R_choice = int(input(f"Choose the unit for R: ")) - 1
    R_unit = units['R'][R_choice]
    R_value = R_values[R_unit]

    # Calculate the variable of interest in the standard unit
    if var_to_calculate == 'pressure':
        V, V_unit = known_values['volume']
        n, n_unit = known_values['moles']
        T, T_unit = known_values['temperature']
        T = convert_temperature(T, T_unit, 'K')
        V = convert_volume(V, V_unit, 'm^3')
        p = (n * R_value * T) / V
        print(f"\nThe calculated pressure is {p:.4f} Pa")

        # Pressure unit conversion
        print("\nSelect the output unit for pressure:")
        for i, unit in enumerate(units['pressure']):
            print(f"{i + 1}. {unit}")
        output_choice = int(input("Enter the number corresponding to the output unit: ")) - 1
        output_unit = units['pressure'][output_choice]
        p_converted = convert_pressure(p, 'Pa', output_unit)
        print(f"The pressure is {p_converted:.4f} {output_unit}")

    elif var_to_calculate == 'volume':
        p, p_unit = known_values['pressure']
        n, n_unit = known_values['moles']
        T, T_unit = known_values['temperature']
        T = convert_temperature(T, T_unit, 'K')
        p = convert_pressure(p, p_unit, 'Pa')
        V = (n * R_value * T) / p
        print(f"\nThe calculated volume is {V:.4f} m^3")

        # Volume unit conversion
        print("\nSelect the output unit for volume:")
        for i, unit in enumerate(units['volume']):
            print(f"{i + 1}. {unit}")
        output_choice = int(input("Enter the number corresponding to the output unit: ")) - 1
        output_unit = units['volume'][output_choice]
        V_converted = convert_volume(V, 'm^3', output_unit)
        print(f"The volume is {V_converted:.4f} {output_unit}")

    elif var_to_calculate == 'moles':
        p, p_unit = known_values['pressure']
        V, V_unit = known_values['volume']
        T, T_unit = known_values['temperature']
        T = convert_temperature(T, T_unit, 'K')
        p = convert_pressure(p, p_unit, 'Pa')
        V = convert_volume(V, V_unit, 'm^3')
        n = (p * V) / (R_value * T)
        print(f"\nThe number of moles is {n:.4f} mol")

    elif var_to_calculate == 'temperature':
        p, p_unit = known_values['pressure']
        V, V_unit = known_values['volume']
        n, n_unit = known_values['moles']
        p = convert_pressure(p, p_unit, 'Pa')
        V = convert_volume(V, V_unit, 'm^3')
        T = (p * V) / (n * R_value)
        print(f"\nThe calculated temperature is {T:.4f} K")

        # Temperature unit conversion
        print("\nSelect the output unit for temperature:")
        for i, unit in enumerate(units['temperature']):
            print(f"{i + 1}. {unit}")
        output_choice = int(input("Enter the number corresponding to the output unit: ")) - 1
        output_unit = units['temperature'][output_choice]
        if output_unit == 'C':
            T_converted = convert_temperature(T, 'K', 'C')
        elif output_unit == 'R':
            T_converted = convert_temperature(T, 'K', 'R')
        else:
            T_converted = T
        print(f"The temperature is {T_converted:.4f} {output_unit}")

# Run the script
ideal_gas_law()
